// Code generated by MockGen. DO NOT EDIT.
// Source: iterate/iterate.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIteratorInterface is a mock of IteratorInterface interface
type MockIteratorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIteratorInterfaceMockRecorder
}

// MockIteratorInterfaceMockRecorder is the mock recorder for MockIteratorInterface
type MockIteratorInterfaceMockRecorder struct {
	mock *MockIteratorInterface
}

// NewMockIteratorInterface creates a new mock instance
func NewMockIteratorInterface(ctrl *gomock.Controller) *MockIteratorInterface {
	mock := &MockIteratorInterface{ctrl: ctrl}
	mock.recorder = &MockIteratorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIteratorInterface) EXPECT() *MockIteratorInterfaceMockRecorder {
	return m.recorder
}

// createIteratorFromObject mocks base method
func (m *MockIteratorInterface) createIteratorFromObject(arg0 ...interface{}) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "createIteratorFromObject", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// createIteratorFromObject indicates an expected call of createIteratorFromObject
func (mr *MockIteratorInterfaceMockRecorder) createIteratorFromObject(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createIteratorFromObject", reflect.TypeOf((*MockIteratorInterface)(nil).createIteratorFromObject), arg0...)
}

// createIteratorFromValues mocks base method
func (m *MockIteratorInterface) createIteratorFromValues(arg0 ...interface{}) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "createIteratorFromValues", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// createIteratorFromValues indicates an expected call of createIteratorFromValues
func (mr *MockIteratorInterfaceMockRecorder) createIteratorFromValues(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createIteratorFromValues", reflect.TypeOf((*MockIteratorInterface)(nil).createIteratorFromValues), arg0...)
}

// Update mocks base method
func (m *MockIteratorInterface) Update() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update")
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockIteratorInterfaceMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIteratorInterface)(nil).Update))
}
