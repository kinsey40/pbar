// Code generated by MockGen. DO NOT EDIT.
// Source: pbar.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockiteratorInterface is a mock of iteratorInterface interface
type MockiteratorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockiteratorInterfaceMockRecorder
}

// MockiteratorInterfaceMockRecorder is the mock recorder for MockiteratorInterface
type MockiteratorInterfaceMockRecorder struct {
	mock *MockiteratorInterface
}

// NewMockiteratorInterface creates a new mock instance
func NewMockiteratorInterface(ctrl *gomock.Controller) *MockiteratorInterface {
	mock := &MockiteratorInterface{ctrl: ctrl}
	mock.recorder = &MockiteratorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockiteratorInterface) EXPECT() *MockiteratorInterfaceMockRecorder {
	return m.recorder
}

// createIteratorFromObject mocks base method
func (m *MockiteratorInterface) createIteratorFromObject(arg0 ...interface{}) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "createIteratorFromObject", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// createIteratorFromObject indicates an expected call of createIteratorFromObject
func (mr *MockiteratorInterfaceMockRecorder) createIteratorFromObject(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createIteratorFromObject", reflect.TypeOf((*MockiteratorInterface)(nil).createIteratorFromObject), arg0...)
}

// createIteratorFromValues mocks base method
func (m *MockiteratorInterface) createIteratorFromValues(arg0 ...interface{}) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "createIteratorFromValues", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// createIteratorFromValues indicates an expected call of createIteratorFromValues
func (mr *MockiteratorInterfaceMockRecorder) createIteratorFromValues(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createIteratorFromValues", reflect.TypeOf((*MockiteratorInterface)(nil).createIteratorFromValues), arg0...)
}

// Update mocks base method
func (m *MockiteratorInterface) Update() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update")
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockiteratorInterfaceMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockiteratorInterface)(nil).Update))
}
