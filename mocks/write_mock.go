// Code generated by MockGen. DO NOT EDIT.
// Source: render/write.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockWrite is a mock of Write interface
type MockWrite struct {
	ctrl     *gomock.Controller
	recorder *MockWriteMockRecorder
}

// MockWriteMockRecorder is the mock recorder for MockWrite
type MockWriteMockRecorder struct {
	mock *MockWrite
}

// NewMockWrite creates a new mock instance
func NewMockWrite(ctrl *gomock.Controller) *MockWrite {
	mock := &MockWrite{ctrl: ctrl}
	mock.recorder = &MockWriteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWrite) EXPECT() *MockWriteMockRecorder {
	return m.recorder
}

// WriteString mocks base method
func (m *MockWrite) WriteString(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteString", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteString indicates an expected call of WriteString
func (mr *MockWriteMockRecorder) WriteString(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteString", reflect.TypeOf((*MockWrite)(nil).WriteString), arg0)
}

// SetWriter mocks base method
func (m *MockWrite) SetWriter(arg0 io.Writer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetWriter", arg0)
}

// SetWriter indicates an expected call of SetWriter
func (mr *MockWriteMockRecorder) SetWriter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWriter", reflect.TypeOf((*MockWrite)(nil).SetWriter), arg0)
}

// GetWriter mocks base method
func (m *MockWrite) GetWriter() io.Writer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWriter")
	ret0, _ := ret[0].(io.Writer)
	return ret0
}

// GetWriter indicates an expected call of GetWriter
func (mr *MockWriteMockRecorder) GetWriter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWriter", reflect.TypeOf((*MockWrite)(nil).GetWriter))
}
